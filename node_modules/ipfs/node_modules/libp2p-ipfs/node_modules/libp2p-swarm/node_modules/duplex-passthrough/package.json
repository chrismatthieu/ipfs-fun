{
  "name": "duplex-passthrough",
  "description": "like a passthrough, but in both directions",
  "version": "1.0.2",
  "license": "ISC",
  "scripts": {
    "test": "node t.js"
  },
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me"
  },
  "main": "dp.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/isaacs/duplex-passthrough.git"
  },
  "keywords": [
    "stream",
    "passthrough",
    "duplex"
  ],
  "bugs": {
    "url": "https://github.com/isaacs/duplex-passthrough/issues"
  },
  "dependencies": {},
  "devDependencies": {
    "standard": "^4.5.4"
  },
  "gitHead": "d728ce80b58b697223a79cfe9a00706efa58973d",
  "readme": "# duplex-passthrough\n\nFor when a single passthrough stream is not enough.\n\n## USAGE\n\n```javascript\nvar dp = new DuplexPassThrough(stream, options);\n```\n\nOr, if the stream is not available yet:\n\n```javascript\nvar dp = new DuplexPassThrough(null, options);\n\n// some time later..\ndp.wrapStream(stream);\n```\n\nThis is useful if you have to buffer up both sides of a duplex stream\nfor some reason, like if you want to read some bits of a socket, but\nthen send it somewhere else, or do other crazy stuff.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/isaacs/duplex-passthrough#readme",
  "_id": "duplex-passthrough@1.0.2",
  "_shasum": "2d8e45cfb028b9de2be993683f4ee1b30cee3575",
  "_from": "diasdavid/duplex-passthrough",
  "_resolved": "git://github.com/diasdavid/duplex-passthrough.git#d728ce80b58b697223a79cfe9a00706efa58973d"
}
